# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: atlassian/default-image:4

pipelines:
  default:
    - parallel:
      - step:
          name: 'Bundle submodle'
          script:
            - echo "bundle submodule"
            - DATE=`date '+%Y%m%d-%H%M'`
            - cd nginx
            - git submodule sync
            - git bundle create ../nginx-ib_$DATE.bundle
            - pipe: atlassian/bitbucket-upload-file:0.1.2
              variables:
                BITBUCKET_USERNAME: $BITBUCKET_USERNAME
                BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
                FILENAME: "nginx-ib_$DATE.bundle"
          artifacts: # defining the artifacts to be passed to each future step.
          - nginx-ib_$DATE.bundle
      - step:
          name: 'grab images'
          script:
            - echo "Your linting goes here..."
            # install deps
            - apt-get update && apt-get install -y skopeo
            - set -e
            - echo "Setting Variables"
            - IMAGE="nginx-ib"
            - DATE=`date '+%Y%m%d-%H%M'`
            - skopeo login registry1.dso.mil -u $REGISTRY_USER -p $REGISTRY_TOKEN
            - echo "Running skopeo container"
            - skopeo sync \
                --src-creds=$REGISTRY_USER:$REGISTRY_TOKEN \
                --src yaml --dest dir $IMAGE.yml $IMAGE
            - echo "TARchiving Collected Image"
            - tar -cvzf $IMAGE-$DATE.tgz $IMAGE
            - pipe: atlassian/bitbucket-upload-file:0.1.2
              variables:
                BITBUCKET_USERNAME: $BITBUCKET_USERNAME
                BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
                FILENAME: "$IMAGE-$DATE.tgz"
            - echo "Complete"
            
          artifacts: # defining the artifacts to be passed to each future step.
          - $IMAGE-$DATE.tgz

